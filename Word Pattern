class Solution {
public:
    bool wordPattern(string pattern, string s) {
        string str="";
        vector<string>v;
        for(int i=0;i<s.size();i++)
        {
            if(s[i]!=' ') str+=s[i];
            else{
                v.push_back(str);
                str="";
            }
        }
        v.push_back(str);
        if(v.size()!=pattern.size()) return false;
        unordered_map<char,string>mp;
        unordered_map<string,char>mp2;
        for(int i=0;i<pattern.size();i++)
        {
            if(mp.find(pattern[i])==mp.end()) mp[pattern[i]]=v[i];
            if(mp2.find(v[i])==mp2.end()) mp2[v[i]]=pattern[i];
            
            if(mp[pattern[i]]!=v[i]||mp2[v[i]]!=pattern[i]) return false;
        }
        return true;
    }
};
